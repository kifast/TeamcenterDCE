<!-- build_publish.xml

Description:
	This ANT script publishes installers and build artifacts to s:/build.

	To use this script, you must update properties is <project root>/scripts/build.properties or overide
	them from commandline (using -D option). For example:

		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 -Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -Dbuild_number=10001 -f scripts/build_publish.xml

	or

		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		set ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% -Dnlexternaldir=%NLEXTERNALDIR% -Dbuild_number=10001
		ant -f scripts/build_publish.xml -v
-->

<project name="build_publish" default="all" basedir=".">

	<!-- Debug
	<echoproperties />
	<fail message="INFO: Debug" />
	-->

	<!-- Initialization tasks -->
	<tstamp />

	<!-- Propery files and environment -->
	<property file="${basedir}/build.properties" />
	<property environment="env" />

	<!-- Global properties -->
	<property name="publish_local_dist_dir" location="${repository_root}/Teamcenter/${cadrmx_repository}/CADRMXInstaller/${version_str}/${build_number}" />
	
	<property name="zip_nx_file_name_prefix" value="NXRMX-${version_str}-${build_number}-${build_date_long}" />
	<property name="zip_nx_file_build" value="${publish_local_dist_dir}/${zip_nx_file_name_prefix}-build${build_output_suffix}.zip" />
    <property name="zip_creo_file_name_prefix" value="CreoRMX-${version_str}-${build_number}-${build_date_long}" />
	<property name="zip_creo_file_build" value="${publish_local_dist_dir}/${zip_creo_file_name_prefix}-build${build_output_suffix}.zip" />
    <property name="zip_sldworks_file_name_prefix" value="SolidWorksRMX-${version_str}-${build_number}-${build_date_long}" />
	<property name="zip_sldworks_file_build" value="${publish_local_dist_dir}/${zip_sldworks_file_name_prefix}-build${build_output_suffix}.zip" />
	<property name="zip_autocad_file_name_prefix" value="AutoCADRMX-${version_str}-${build_number}-${build_date_long}" />
	<property name="zip_autocad_file_build" value="${publish_local_dist_dir}/${zip_autocad_file_name_prefix}-build${build_output_suffix}.zip" />
	<property name="zip_catia_file_name_prefix" value="CatiaRMX-${version_str}-${build_number}-${build_date_long}" />
	<property name="zip_catia_file_build" value="${publish_local_dist_dir}/${zip_catia_file_name_prefix}-build${build_output_suffix}.zip" />

	<!-- Dump properties -->
	<echoproperties />

	<echo message="INFO: Dump properties completed" />

	<!-- Sanity checks -->
	<fail message="nlbuildroot is not set" unless="nlbuildroot" />
	<fail message="nlbuildroot is empty">
		<condition>
			<equals arg1="${nlbuildroot}" arg2="" trim="true" />
		</condition>
	</fail>
	<available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists" />
	<fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists" />

	<fail message="version_str is not set" unless="version_str" />
	<fail message="version_str is empty">
		<condition>
			<equals arg1="${version_str}" arg2="" trim="true" />
		</condition>
	</fail>

	<fail message="build_number is not set" unless="build_number" />
	<fail message="build_number is empty">
		<condition>
			<equals arg1="${build_number}" arg2="" trim="true" />
		</condition>
	</fail>

	<fail message="build_date_long is not set" unless="build_date_long" />
	<fail message="build_date_long is empty">
		<condition>
			<equals arg1="${build_date_long}" arg2="" trim="true" />
		</condition>
	</fail>

	<fail message="repository_root is not set" unless="repository_root" />
	<fail message="repository_root is empty">
		<condition>
			<equals arg1="${repository_root}" arg2="" trim="true" />
		</condition>
	</fail>
	<available file="${repository_root}" type="dir" property="local.repository_root_exists" />
	<fail message="repository_root directory does not exist - ${repository_root}" unless="local.repository_root_exists" />

	<!-- Targets -->
	<target name="all" depends="product, archive" />

	<target name="product" depends="CADRMXInstaller" />

	<target name="CADRMXInstaller">
		<!-- Copy files -->
		<mkdir dir="${publish_local_dist_dir}" />
		<!-- <copy file="${nlbuildroot}/tmp_output/RMX For Creo.msi" todir="${publish_local_dist_dir}" /> -->
        <!-- <copy file="${nlbuildroot}/tmp_output/RMX For NX.msi" todir="${publish_local_dist_dir}" /> -->
		<echo message="[BUILD MANIFEST]   Product Name       : Rights Management eXtension - CAD RMX Installer" />
		<echo message="[BUILD MANIFEST]   Installer Location : ${publish_local_dist_dir}" />
	</target>

	<target name="archive" depends="archive_msi" />

	<target name="archive_msi">

		<delete file="${zip_nx_file_build}" />
		<zip destfile="${zip_nx_file_build}">
            <fileset file="${nlbuildroot}/tmp_output/NextLabs Rights Management For NX.msi" />
        </zip>
		<echo message="[BUILD MANIFEST] Archive: ${zip_nx_file_build}" />

		<delete file="${zip_creo_file_build}" />
		<zip destfile="${zip_creo_file_build}">
            <fileset file="${nlbuildroot}/tmp_output/NextLabs Rights Management For Creo.msi" />
        </zip>
		<echo message="[BUILD MANIFEST] Archive: ${zip_creo_file_build}" />

		<delete file="${zip_sldworks_file_build}" />
		<zip destfile="${zip_sldworks_file_build}">
            <fileset file="${nlbuildroot}/tmp_output/NextLabs Rights Management For SolidWorks.msi" />
        </zip>
		<echo message="[BUILD MANIFEST] Archive: ${zip_sldworks_file_build}" />

		<delete file="${zip_autocad_file_build}" />
		<zip destfile="${zip_autocad_file_build}">
            <fileset file="${nlbuildroot}/tmp_output/NextLabs Rights Management For AutoCAD.msi" />
        </zip>
		<echo message="[BUILD MANIFEST] Archive: ${zip_autocad_file_build}" />

		<delete file="${zip_catia_file_build}" />
		<zip destfile="${zip_catia_file_build}">
            <fileset file="${nlbuildroot}/tmp_output/NextLabs Rights Management For CATIA.msi" />
        </zip>
		<echo message="[BUILD MANIFEST] Archive: ${zip_catia_file_build}" />
	</target>
</project>
