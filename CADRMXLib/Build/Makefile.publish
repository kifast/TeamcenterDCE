# Make file to publish output.
#
# The following variables must be defined in commandline:
#	VERSION_BUILD_SHORT
#
# Example:
#	make -f Makefile.publish repo
#	make -f Makefile.publish sync


#
# Check for errors
#

OS=$(shell uname)

ifeq ($(PROJECT_NAME),)
  $(error PROJECT_NAME undefined.)
endif

ifeq ($(VERSION_STR),)
  $(error VERSION_STR undefined.)
endif

ifeq ($(VERSION_BUILD_SHORT),)
  $(error VERSION_BUILD_SHORT undefined.)
endif

ifeq ($(BUILD_DATE),)
  $(error BUILD_DATE undefined.)
endif

ifeq ($(NLPROJECTROOT),)
  $(error NLPROJECTROOT undefined.)
endif

ifeq ($(REPOSITORY_ROOT),)
  $(error REPOSITORY_ROOT undefined.)
endif

ifeq ($(RELEASE_ARTIFACTS_ROOT),)
  $(error RELEASE_ARTIFACTS_ROOT undefined.)
endif

#
# Constants
#

LOCAL_OUTPUT_DIR=$(NLPROJECTROOT)/tmp_output
LOCAL_WORK_DIR=$(NLPROJECTROOT)/tmp_work
LOCAL_XLIB_DIR=$(NLPROJECTROOT)/tmp_xlibs

BASE_DIR=Teamcenter/RightsManagementExtension/$(PROJECT_NAME)/$(VERSION_PRODUCT_STR)/$(VERSION_BUILD_SHORT)
ZIP_FILE_NAME_BIN=$(PROJECT_NAME)-$(VERSION_PRODUCT_STR).$(VERSION_BUILD_SHORT)-$(BUILD_DATE)-bin.zip
BUILD_OUTPUT_DIR_x64=$(NLPROJECTROOT)/x64/release

REPOSITORY_BUILD_DIR=$(REPOSITORY_ROOT)/$(BASE_DIR)
RELEASE_ARTIFACTS_DIR=$(RELEASE_ARTIFACTS_ROOT)/$(BASE_DIR)/x64

BUILD_MANIFEST_FILE_NAME=build.manifest
OUTDIR_BIN="$(LOCAL_OUTPUT_DIR)/CADRMXLib/bin/x64/release"
OUTDIR_INCLUDE="$(LOCAL_OUTPUT_DIR)/CADRMXLib/include"
OUTDIR_DOC="$(LOCAL_OUTPUT_DIR)/CADRMXLib/docs"
#
# Info
#

$(info --------------------------------------------------------------)
$(info PROJECT_NAME                   = $(PROJECT_NAME)) 
$(info VERSION_STR                    = $(VERSION_STR)) 
$(info VERSION_BUILD_SHORT            = $(VERSION_BUILD_SHORT)) 
$(info ZIP_FILE_NAME_BIN              = $(ZIP_FILE_NAME_BIN)) 
$(info REPOSITORY_BUILD_DIR           = $(REPOSITORY_BUILD_DIR)) 
$(info RELEASE_ARTIFACTS_DIR          = $(RELEASE_ARTIFACTS_DIR)) 
$(info LOCAL_WORK_DIR                 = $(LOCAL_WORK_DIR)) 
$(info LOCAL_OUTPUT_DIR               = $(LOCAL_OUTPUT_DIR)) 
$(info --------------------------------------------------------------)
$(info )


#
# Targets
#

.PHONY: all
all: archive 

.PHONY: archive
archive: archive_cadrmxlib
	@echo "Zipping distribution package..."
	cd $(LOCAL_OUTPUT_DIR);	zip -r "$(LOCAL_WORK_DIR)/$(ZIP_FILE_NAME_BIN)" .
	@echo "Copying distribution zip file to repository..."
	@if [ ! -d $(REPOSITORY_BUILD_DIR) ]; then	\
		mkdir -p $(REPOSITORY_BUILD_DIR) ;		\
	fi
	cp -rf $(LOCAL_WORK_DIR)/$(ZIP_FILE_NAME_BIN) $(REPOSITORY_BUILD_DIR)
	ls -lR $(REPOSITORY_BUILD_DIR)
	@echo "Copying build artifacts to repository..."
	@if [ ! -d $(RELEASE_ARTIFACTS_DIR) ]; then	\
		mkdir -p $(RELEASE_ARTIFACTS_DIR) ;		\
	fi
	rm -rf $(BUILD_OUTPUT_DIR_x64)/obj
	cp -pf $(BUILD_OUTPUT_DIR_x64)/* $(RELEASE_ARTIFACTS_DIR)
	ls -lR $(RELEASE_ARTIFACTS_DIR)


.PHONY: archive_cadrmxlib
archive_cadrmxlib:make_dir
	@echo "Archiving libraries for cadrmxlib"
	mkdir -p $(OUTDIR_BIN)
	cp -pf $(BUILD_OUTPUT_DIR_x64)/CADRMXLib.dll $(OUTDIR_BIN)
	cp -pf $(BUILD_OUTPUT_DIR_x64)/CADRMXLib.lib $(OUTDIR_BIN)
	cp -pf $(BUILD_OUTPUT_DIR_x64)/libeay32.dll $(OUTDIR_BIN)
	ls -lR $(OUTDIR_BIN)
	cp -pf $(NLPROJECTROOT)/CADRMXLib/External/log4cplus.properties $(OUTDIR_BIN)
	mkdir -p $(OUTDIR_INCLUDE)
	cp -pf $(NLPROJECTROOT)/CADRMXLib/External/*.h $(OUTDIR_INCLUDE)
	ls -lR $(OUTDIR_INCLUDE)
	mkdir -p $(OUTDIR_DOC)
	cp -pf $(NLPROJECTROOT)/CADRMXLib/doxygen/docs/latex/refman.pdf $(OUTDIR_DOC)/cadrmxsdk.pdf
	ls -lR $(OUTDIR_DOC)
.PHONY:make_dir
make_dir:
	@if [ ! -d $(LOCAL_OUTPUT_DIR) ]; then	\
		mkdir -p $(LOCAL_OUTPUT_DIR) ;		\
	fi
	@rm -rf $(LOCAL_OUTPUT_DIR)/*
	@if [ ! -d $(LOCAL_WORK_DIR) ]; then	\
		mkdir -p $(LOCAL_WORK_DIR) ;		\
	fi
	rm -rf $(LOCAL_WORK_DIR)/*

